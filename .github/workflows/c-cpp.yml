name: C/C++ CI

on:
  push:
    branches: [ maint/maint-56 ]
  pull_request:
    branches: [ maint/maint-56 ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: configure
      run: cd icu4c/source/ && ./runConfigureICU Linux --disable-renaming
    - name: make
      run: cd icu4c/source/ && make -j4

  release:
#    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 56
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Store Release url
      run: |
        echo "${{ steps.create_release.outputs.upload_url }}" > ./upload_url
    - uses: actions/upload-artifact@v1
      with:
        path: ./upload_url
        name: upload_url

  publish:
#    if: contains(github.ref, 'tags/v')

    name: "Linux Latest x64"
    runs-on: ubuntu-latest
    needs: release

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v1
      with:
        path: ./upload_url
        name: upload_url
    - name: Download URL
      uses: actions/download-artifact@v1
      with:
        name: upload_url
        path: ./
    - id: set_upload_url
      run: |
        upload_url=`cat ./upload_url`
        echo ::set-output name=upload_url::$upload_url
    - name: Upload to Release
      id: upload_to_release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.set_upload_url.outputs.upload_url }}
        asset_path: ./
        asset_name: tsts
        asset_content_type: application/zip

